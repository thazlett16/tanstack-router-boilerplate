/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as PokemonRouteImport } from './routes/pokemon/route';
import { Route as IndexImport } from './routes/index';
import { Route as PokemonIndexImport } from './routes/pokemon/index';
import { Route as PokemonPokemonIDImport } from './routes/pokemon/$pokemonID';

// Create/Update Routes

const PokemonRouteRoute = PokemonRouteImport.update({
  id: '/pokemon',
  path: '/pokemon',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const PokemonIndexRoute = PokemonIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PokemonRouteRoute,
} as any);

const PokemonPokemonIDRoute = PokemonPokemonIDImport.update({
  id: '/$pokemonID',
  path: '/$pokemonID',
  getParentRoute: () => PokemonRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/pokemon': {
      id: '/pokemon';
      path: '/pokemon';
      fullPath: '/pokemon';
      preLoaderRoute: typeof PokemonRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/pokemon/$pokemonID': {
      id: '/pokemon/$pokemonID';
      path: '/$pokemonID';
      fullPath: '/pokemon/$pokemonID';
      preLoaderRoute: typeof PokemonPokemonIDImport;
      parentRoute: typeof PokemonRouteImport;
    };
    '/pokemon/': {
      id: '/pokemon/';
      path: '/';
      fullPath: '/pokemon/';
      preLoaderRoute: typeof PokemonIndexImport;
      parentRoute: typeof PokemonRouteImport;
    };
  }
}

// Create and export the route tree

interface PokemonRouteRouteChildren {
  PokemonPokemonIDRoute: typeof PokemonPokemonIDRoute;
  PokemonIndexRoute: typeof PokemonIndexRoute;
}

const PokemonRouteRouteChildren: PokemonRouteRouteChildren = {
  PokemonPokemonIDRoute: PokemonPokemonIDRoute,
  PokemonIndexRoute: PokemonIndexRoute,
};

const PokemonRouteRouteWithChildren = PokemonRouteRoute._addFileChildren(
  PokemonRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/pokemon': typeof PokemonRouteRouteWithChildren;
  '/pokemon/$pokemonID': typeof PokemonPokemonIDRoute;
  '/pokemon/': typeof PokemonIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/pokemon/$pokemonID': typeof PokemonPokemonIDRoute;
  '/pokemon': typeof PokemonIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/pokemon': typeof PokemonRouteRouteWithChildren;
  '/pokemon/$pokemonID': typeof PokemonPokemonIDRoute;
  '/pokemon/': typeof PokemonIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/pokemon' | '/pokemon/$pokemonID' | '/pokemon/';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/pokemon/$pokemonID' | '/pokemon';
  id: '__root__' | '/' | '/pokemon' | '/pokemon/$pokemonID' | '/pokemon/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  PokemonRouteRoute: typeof PokemonRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PokemonRouteRoute: PokemonRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pokemon"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/pokemon": {
      "filePath": "pokemon/route.tsx",
      "children": [
        "/pokemon/$pokemonID",
        "/pokemon/"
      ]
    },
    "/pokemon/$pokemonID": {
      "filePath": "pokemon/$pokemonID.tsx",
      "parent": "/pokemon"
    },
    "/pokemon/": {
      "filePath": "pokemon/index.tsx",
      "parent": "/pokemon"
    }
  }
}
ROUTE_MANIFEST_END */
